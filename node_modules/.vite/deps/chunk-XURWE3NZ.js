import {
  InputBaseComponent,
  InputBaseRoot,
  InputBase_default,
  inputBaseClasses_default,
  inputOverridesResolver,
  rootOverridesResolver
} from "./chunk-KCBXOZ36.js";
import {
  _objectWithoutPropertiesLoose,
  composeClasses,
  deepmerge,
  generateUtilityClass,
  generateUtilityClasses,
  init_base,
  init_esm,
  init_objectWithoutPropertiesLoose,
  init_styled,
  init_useThemeProps,
  refType_default,
  require_jsx_runtime,
  require_prop_types,
  rootShouldForwardProp,
  styled_default,
  useThemeProps2 as useThemeProps
} from "./chunk-7AYALB4T.js";
import {
  _extends,
  init_extends
} from "./chunk-CNT3ERSC.js";
import {
  require_react
} from "./chunk-4ZYAITUQ.js";
import {
  __toESM
} from "./chunk-QOVRSCHT.js";

// node_modules/@mui/material/Input/inputClasses.js
init_extends();
init_base();
function getInputUtilityClass(slot) {
  return generateUtilityClass("MuiInput", slot);
}
var inputClasses = _extends({}, inputBaseClasses_default, generateUtilityClasses("MuiInput", ["root", "underline", "input"]));
var inputClasses_default = inputClasses;

// node_modules/@mui/material/Input/Input.js
init_objectWithoutPropertiesLoose();
init_extends();
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
init_base();
init_esm();
init_styled();
init_useThemeProps();
var import_jsx_runtime = __toESM(require_jsx_runtime());
var _excluded = ["disableUnderline", "components", "componentsProps", "fullWidth", "inputComponent", "multiline", "type"];
var useUtilityClasses = (ownerState) => {
  const {
    classes,
    disableUnderline
  } = ownerState;
  const slots = {
    root: ["root", !disableUnderline && "underline"],
    input: ["input"]
  };
  const composedClasses = composeClasses(slots, getInputUtilityClass, classes);
  return _extends({}, classes, composedClasses);
};
var InputRoot = styled_default(InputBaseRoot, {
  shouldForwardProp: (prop) => rootShouldForwardProp(prop) || prop === "classes",
  name: "MuiInput",
  slot: "Root",
  overridesResolver: (props, styles) => {
    const {
      ownerState
    } = props;
    return [...rootOverridesResolver(props, styles), !ownerState.disableUnderline && styles.underline];
  }
})(({
  theme,
  ownerState
}) => {
  const light = theme.palette.mode === "light";
  const bottomLineColor = light ? "rgba(0, 0, 0, 0.42)" : "rgba(255, 255, 255, 0.7)";
  return _extends({
    position: "relative"
  }, ownerState.formControl && {
    "label + &": {
      marginTop: 16
    }
  }, !ownerState.disableUnderline && {
    "&:after": {
      borderBottom: `2px solid ${theme.palette[ownerState.color].main}`,
      left: 0,
      bottom: 0,
      content: '""',
      position: "absolute",
      right: 0,
      transform: "scaleX(0)",
      transition: theme.transitions.create("transform", {
        duration: theme.transitions.duration.shorter,
        easing: theme.transitions.easing.easeOut
      }),
      pointerEvents: "none"
    },
    [`&.${inputClasses_default.focused}:after`]: {
      transform: "scaleX(1) translateX(0)"
    },
    [`&.${inputClasses_default.error}:after`]: {
      borderBottomColor: theme.palette.error.main,
      transform: "scaleX(1)"
    },
    "&:before": {
      borderBottom: `1px solid ${bottomLineColor}`,
      left: 0,
      bottom: 0,
      content: '"\\00a0"',
      position: "absolute",
      right: 0,
      transition: theme.transitions.create("border-bottom-color", {
        duration: theme.transitions.duration.shorter
      }),
      pointerEvents: "none"
    },
    [`&:hover:not(.${inputClasses_default.disabled}):before`]: {
      borderBottom: `2px solid ${theme.palette.text.primary}`,
      "@media (hover: none)": {
        borderBottom: `1px solid ${bottomLineColor}`
      }
    },
    [`&.${inputClasses_default.disabled}:before`]: {
      borderBottomStyle: "dotted"
    }
  });
});
var InputInput = styled_default(InputBaseComponent, {
  name: "MuiInput",
  slot: "Input",
  overridesResolver: inputOverridesResolver
})({});
var Input = React.forwardRef(function Input2(inProps, ref) {
  const props = useThemeProps({
    props: inProps,
    name: "MuiInput"
  });
  const {
    disableUnderline,
    components = {},
    componentsProps: componentsPropsProp,
    fullWidth = false,
    inputComponent = "input",
    multiline = false,
    type = "text"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  const classes = useUtilityClasses(props);
  const ownerState = {
    disableUnderline
  };
  const inputComponentsProps = {
    root: {
      ownerState
    }
  };
  const componentsProps = componentsPropsProp ? deepmerge(componentsPropsProp, inputComponentsProps) : inputComponentsProps;
  return (0, import_jsx_runtime.jsx)(InputBase_default, _extends({
    components: _extends({
      Root: InputRoot,
      Input: InputInput
    }, components),
    componentsProps,
    fullWidth,
    inputComponent,
    multiline,
    ref,
    type
  }, other, {
    classes
  }));
});
true ? Input.propTypes = {
  autoComplete: import_prop_types.default.string,
  autoFocus: import_prop_types.default.bool,
  classes: import_prop_types.default.object,
  color: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["primary", "secondary"]), import_prop_types.default.string]),
  components: import_prop_types.default.shape({
    Input: import_prop_types.default.elementType,
    Root: import_prop_types.default.elementType
  }),
  componentsProps: import_prop_types.default.shape({
    input: import_prop_types.default.object,
    root: import_prop_types.default.object
  }),
  defaultValue: import_prop_types.default.any,
  disabled: import_prop_types.default.bool,
  disableUnderline: import_prop_types.default.bool,
  endAdornment: import_prop_types.default.node,
  error: import_prop_types.default.bool,
  fullWidth: import_prop_types.default.bool,
  id: import_prop_types.default.string,
  inputComponent: import_prop_types.default.elementType,
  inputProps: import_prop_types.default.object,
  inputRef: refType_default,
  margin: import_prop_types.default.oneOf(["dense", "none"]),
  maxRows: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]),
  minRows: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]),
  multiline: import_prop_types.default.bool,
  name: import_prop_types.default.string,
  onChange: import_prop_types.default.func,
  placeholder: import_prop_types.default.string,
  readOnly: import_prop_types.default.bool,
  required: import_prop_types.default.bool,
  rows: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]),
  startAdornment: import_prop_types.default.node,
  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),
  type: import_prop_types.default.string,
  value: import_prop_types.default.any
} : void 0;
Input.muiName = "Input";
var Input_default = Input;

export {
  getInputUtilityClass,
  inputClasses_default,
  Input_default
};
//# sourceMappingURL=chunk-XURWE3NZ.js.map
